#!/usr/bin/env nodejs

const WebpackDevServer = require('webpack-dev-server');
const webpack = require('webpack');
const CircularDependencyPlugin = require('circular-dependency-plugin');
const SWPrecacheWebpackPlugin = require('sw-precache-webpack-plugin');

const config = require('./config/webpack.dev.js');

config.entry = [
	'webpack-dev-server/client?http://localhost:8080/',
	'webpack/hot/dev-server',
	'./src/website/app.js',
];

config.output = {
	path: __dirname + "/dist",
	publicPath: '/',
	filename: 'app.js',
};

config.plugins = [
	new webpack.DefinePlugin({
		'process.env': {
			website: true,
		},
	}),
	new CircularDependencyPlugin(),
	new webpack.HotModuleReplacementPlugin(),
	new SWPrecacheWebpackPlugin(
		{
			cacheId: 'audius',
			filename: 'service-worker.js',
			maximumFileSizeToCacheInBytes: 4194304,
			stripPrefix: 'dist-website/',
			// runtimeCaching: [{
			// 	handler: 'cacheFirst',
			// 	urlPattern: /[.]mp3$/,
			// }],
		}
	),
];

new WebpackDevServer(webpack(config), {
	contentBase: './src/website/static/',
	publicPath: config.output.publicPath,
	historyApiFallback: false,
	stats: {
		colors: true,
		chunks: false,
	},
	hot: true,
	inline: true,
}).listen(8080, 'localhost', function(err, res) {
	if (err) console.warn(err);
	console.log('Listening on localhost:8080');
});
